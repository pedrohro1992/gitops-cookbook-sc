apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-app
spec:
  workspaces:
    - name: source
      description: The git repo will be cloned onto the volume backing this workspaces
      params:
        - name: contextDir
          description: the context dir within the source
          default: quarkus
        - name: tlsVerify
          description: tls verify
          type: string
          default: "false"
        - name: url
          default: https://github.com/gitops-cookbook/tekton-tutorial-greeter.git
        - name: revision
          default: master
        - name: subdirectory
          default: ""
        - name: sslVerify
          description: defines if http.sslVerify should be set to true or false in the global git config
          type: string
          default: "false"
      steps:
        - image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.21.0"
          name: clone
          resources: {}
   
        - name: build-sources
          image: gcr.io/cloud-builders/mvn
          command:
            - mvn
          args:
            - -Dskiptests
            - clean
            - install
          env:
            - name: user.home
              value: /home/tekton
          workingDir: "/workspace/source/$(params.contextDir)"
        - name: build-and-push-image
          image: quay.io/buildah/stable
          script: |
            #!/usr/bin/env bash
            buildah --storage-driver=$STORAGE_DRIVER --tls-verify=$(params.tls.Verify) bud --layers -t $DESTINATION_IMAGE $CONTEXT_DIR
            buildah --storage-driver=$STORAGE_DRIVER --tls-verify=$(params.tls.Verify) push $DESTINATION_IMAGE docker://$DESTINATION_IMAGE
          env:
            - name: DESTINATION_IMAGE
              value: "$(params.destinationImage)"
            - name: CONTEXT_DIR
              value: "/workspace/source/$(params.contextDir)"
            - name: STORAGE_DRIVER
              value: "$(params.storageDriver)"
          workingDir: "/workspace/source/$(params.contextDir)"
          volumeMounts:
            - name: varlibc
              mountPath: /var/lib/containers
   volumes:
    - name: varlibc
      emptyDir: {}
  
    
